# The default config file for Salus.
#
# You can specify a `salus.yaml` file in the root of your project to override any of these defaults.
# For more complex configuration, including the concatenation of global and local files, you can
# use use the --config flag to specify multiple files (local or remote) to parse.

config_version: 1

# String
# Used in the report to identify the project being scanned.
project_name: "secDevLabs_Test"

reports:
  # - uri: file://tests/salus-report.txt
  #   format: txt
  - uri: file://salus-report.json
    format: json
    verbose: true
  # - uri: https://salus-config.internal2.net/salus-report
  #   format: json
  #   verbose: true
  #   post:
  #     salus_report_param_name: 'report'
  #     additional_params:
  #       repo: 'Random Repo'
  #       user: 'John Doe' 
  # - uri: https://salus-config.internal2.net/salus-report
  #   format: cyclonedx-json
  #   put:
  #   headers:
  #     Age: '12'
  #     X-API-Key: '{{RANDOM_API_KEY}}'
  #   cyclonedx_options:
  #     cyclonedx_project_name: '{{SALUS_BUILD_ORG}}/{{SALUS_BUILD_PROJECT}}'
  #     spec_version: '1.3'
  # - uri: file://salus-report.sarif
  #   format: sarif
  - uri: file://salus-report.sarif
    format: sarif
    sarif_options:
      include_suppressed: true

# What scanners should run. "all" or "none" are acceptable as well
active_scanners:
  - RepoNotEmpty
  - Gosec
  - NPMAudit
  - YarnAudit
  - PatternSearch
  - Semgrep
  - Gitleaks
  - Bandit
  - Nodejsscan

# enforced_scanners are scanners that cause Salus to exit !0 when they fail.
# Controlling this list will allow you to choose which scanners must pass for
# a CI environment to show a successful build and, by omission, allow you to run new
# scanners in test mode while they are being tuned or rolled out across a fleet of builds.
#
# By default, we enforce all scanners which we deem to have low false positive rates.
# Strong defaults lowers the risk of misconfiguration that could fail closed if configuration
# was necessary to ensure that certain scanners pass.
# Other scanners may need to graduate from the testing phase or
# should only be enforced explicitly by custom configuration.
enforced_scanners:
   - RepoNotEmpty
  # - Gosec
  # - NPMAudit
  # - YarnAudit
  # - PatternSearch
  # - Semgrep
  # - Bandit
  # - Gitleaks
  # - Nodejsscan

scanner_configs:
  Gitleaks:
    verbose: true
    redact: true
    exit-code: '2'
    log-opts: 'HEAD^...HEAD'
  Nodejsscan:
    missing-controls: false
